$comment
	File created using the following command:
		vcd file MIPS_SingleCycle.msim.vcd -direction
$end
$date
	Mon Nov 11 10:52:11 2019
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module instructionmemory_vhd_vec_tst $end
$var wire 1 ! address [5] $end
$var wire 1 " address [4] $end
$var wire 1 # address [3] $end
$var wire 1 $ address [2] $end
$var wire 1 % address [1] $end
$var wire 1 & address [0] $end
$var wire 1 ' readData [31] $end
$var wire 1 ( readData [30] $end
$var wire 1 ) readData [29] $end
$var wire 1 * readData [28] $end
$var wire 1 + readData [27] $end
$var wire 1 , readData [26] $end
$var wire 1 - readData [25] $end
$var wire 1 . readData [24] $end
$var wire 1 / readData [23] $end
$var wire 1 0 readData [22] $end
$var wire 1 1 readData [21] $end
$var wire 1 2 readData [20] $end
$var wire 1 3 readData [19] $end
$var wire 1 4 readData [18] $end
$var wire 1 5 readData [17] $end
$var wire 1 6 readData [16] $end
$var wire 1 7 readData [15] $end
$var wire 1 8 readData [14] $end
$var wire 1 9 readData [13] $end
$var wire 1 : readData [12] $end
$var wire 1 ; readData [11] $end
$var wire 1 < readData [10] $end
$var wire 1 = readData [9] $end
$var wire 1 > readData [8] $end
$var wire 1 ? readData [7] $end
$var wire 1 @ readData [6] $end
$var wire 1 A readData [5] $end
$var wire 1 B readData [4] $end
$var wire 1 C readData [3] $end
$var wire 1 D readData [2] $end
$var wire 1 E readData [1] $end
$var wire 1 F readData [0] $end

$scope module i1 $end
$var wire 1 G gnd $end
$var wire 1 H vcc $end
$var wire 1 I unknown $end
$var wire 1 J devoe $end
$var wire 1 K devclrn $end
$var wire 1 L devpor $end
$var wire 1 M ww_devoe $end
$var wire 1 N ww_devclrn $end
$var wire 1 O ww_devpor $end
$var wire 1 P ww_address [5] $end
$var wire 1 Q ww_address [4] $end
$var wire 1 R ww_address [3] $end
$var wire 1 S ww_address [2] $end
$var wire 1 T ww_address [1] $end
$var wire 1 U ww_address [0] $end
$var wire 1 V ww_readData [31] $end
$var wire 1 W ww_readData [30] $end
$var wire 1 X ww_readData [29] $end
$var wire 1 Y ww_readData [28] $end
$var wire 1 Z ww_readData [27] $end
$var wire 1 [ ww_readData [26] $end
$var wire 1 \ ww_readData [25] $end
$var wire 1 ] ww_readData [24] $end
$var wire 1 ^ ww_readData [23] $end
$var wire 1 _ ww_readData [22] $end
$var wire 1 ` ww_readData [21] $end
$var wire 1 a ww_readData [20] $end
$var wire 1 b ww_readData [19] $end
$var wire 1 c ww_readData [18] $end
$var wire 1 d ww_readData [17] $end
$var wire 1 e ww_readData [16] $end
$var wire 1 f ww_readData [15] $end
$var wire 1 g ww_readData [14] $end
$var wire 1 h ww_readData [13] $end
$var wire 1 i ww_readData [12] $end
$var wire 1 j ww_readData [11] $end
$var wire 1 k ww_readData [10] $end
$var wire 1 l ww_readData [9] $end
$var wire 1 m ww_readData [8] $end
$var wire 1 n ww_readData [7] $end
$var wire 1 o ww_readData [6] $end
$var wire 1 p ww_readData [5] $end
$var wire 1 q ww_readData [4] $end
$var wire 1 r ww_readData [3] $end
$var wire 1 s ww_readData [2] $end
$var wire 1 t ww_readData [1] $end
$var wire 1 u ww_readData [0] $end
$var wire 1 v \readData[0]~output_o\ $end
$var wire 1 w \readData[1]~output_o\ $end
$var wire 1 x \readData[2]~output_o\ $end
$var wire 1 y \readData[3]~output_o\ $end
$var wire 1 z \readData[4]~output_o\ $end
$var wire 1 { \readData[5]~output_o\ $end
$var wire 1 | \readData[6]~output_o\ $end
$var wire 1 } \readData[7]~output_o\ $end
$var wire 1 ~ \readData[8]~output_o\ $end
$var wire 1 !! \readData[9]~output_o\ $end
$var wire 1 "! \readData[10]~output_o\ $end
$var wire 1 #! \readData[11]~output_o\ $end
$var wire 1 $! \readData[12]~output_o\ $end
$var wire 1 %! \readData[13]~output_o\ $end
$var wire 1 &! \readData[14]~output_o\ $end
$var wire 1 '! \readData[15]~output_o\ $end
$var wire 1 (! \readData[16]~output_o\ $end
$var wire 1 )! \readData[17]~output_o\ $end
$var wire 1 *! \readData[18]~output_o\ $end
$var wire 1 +! \readData[19]~output_o\ $end
$var wire 1 ,! \readData[20]~output_o\ $end
$var wire 1 -! \readData[21]~output_o\ $end
$var wire 1 .! \readData[22]~output_o\ $end
$var wire 1 /! \readData[23]~output_o\ $end
$var wire 1 0! \readData[24]~output_o\ $end
$var wire 1 1! \readData[25]~output_o\ $end
$var wire 1 2! \readData[26]~output_o\ $end
$var wire 1 3! \readData[27]~output_o\ $end
$var wire 1 4! \readData[28]~output_o\ $end
$var wire 1 5! \readData[29]~output_o\ $end
$var wire 1 6! \readData[30]~output_o\ $end
$var wire 1 7! \readData[31]~output_o\ $end
$var wire 1 8! \address[0]~input_o\ $end
$var wire 1 9! \address[1]~input_o\ $end
$var wire 1 :! \address[2]~input_o\ $end
$var wire 1 ;! \address[3]~input_o\ $end
$var wire 1 <! \address[4]~input_o\ $end
$var wire 1 =! \Mux6~0_combout\ $end
$var wire 1 >! \address[5]~input_o\ $end
$var wire 1 ?! \Mux6~1_combout\ $end
$var wire 1 @! \Mux6~2_combout\ $end
$var wire 1 A! \Mux3~0_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0G
1H
xI
1J
1K
1L
1M
1N
1O
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
1(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
12!
13!
04!
05!
06!
17!
08!
09!
0:!
0;!
0<!
1=!
0>!
0?!
1@!
1A!
0!
0"
0#
0$
0%
0&
0P
0Q
0R
0S
0T
0U
1V
0W
0X
0Y
1Z
1[
0\
0]
0^
0_
0`
0a
0b
0c
0d
1e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
1'
0(
0)
0*
1+
1,
0-
0.
0/
00
01
02
03
04
05
16
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
$end
#1000000
