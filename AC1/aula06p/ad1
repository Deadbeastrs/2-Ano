	.data
arr:	.space 200
str:	.asciiz ", "
str2:	.asciiz "array["
str1:  	.asciiz "Size of array : "
str3:	.asciiz "] = "
str4:	.asciiz "Enter the value to be inserted: "
str5:	.asciiz "Enter the position: "
str6:	.asciiz "\nOriginal array: "
str7:	.asciiz "\nModified array: "
	.text
	.globl main
main:	addiu $sp,$sp,-4
	sw $ra,0($sp)
	li $v0,4
	la $a0,str1
	syscall
	li $v0,5
	syscall
	move $s0,$v0 # arraysize
	li $s1,0 # i
for1:	bge $s1,$s0,eF2
	li $v0,4
	la $a0,str2
	syscall
	li $v0,1
	move $a0,$s1
	syscall
	li $v0,4
	la $a0,str3
	syscall
	la $s3,arr	# &arr
	sll $s2,$s1,2
	addu $s2,$s2,$s3 # &arr[i]
	li $v0,5
	syscall
	sw $v0,0($s2)
	addiu $s1,$s1,1
	j for1
eF2:	li $v0,4
	la $a0,str4
	syscall
	li $v0,5
	syscall
	move $s3,$v0 # insertvalue
	li $v0,4
	la $a0,str5
	syscall
	li $v0,5
	syscall
	move $s4,$v0 # insertpos
	li $v0,4
	la $a0,str6
	syscall
	la $a0,arr
	move $a1,$s0
	jal print_array
	la $a0,arr
	move $a1,$s3
	move $a2,$s4
	move $a3,$s0
	jal insert
	li $v0,4
	la $a0,str7
	syscall
	la $a0,arr
	addiu $s0,$s0,1
	move $a1,$s0
	jal print_array
	lw $ra,0($sp)
	addiu $sp,$sp,4
	jr $ra

insert:	li $t0,0 # i
	addi $t0,$a3,-1 # size - 1
	ble $a2,$t0,else
	li $v0,1
	j eIf
else:	blt $t0,$a2,eF
	sll $t1,$t0,2    # i * 4
	addu $t1,$a0,$t1 # &array[i]
	addiu $t2,$t1,4 # &array[i+1]
	lw $t3,0($t1) # array[i]
	sw $t3,0($t2) #array[i+1] = array[i]
	addi $t0,$t0,-1 # i--
	j else
eF:	sll $t4,$a2,2
	addu $t4,$t4,$a0
	sw $a1,0($t4)
	li $v0,0
eIf:	jr $ra

print_array:move $t1,$a0
	sll $t0,$a1,2
	addu $t0,$t0,$t1 # *P = a + n
f:	bge $t1,$t0,eF1
	li $v0,1
	lw $a0,0($t1)  # *a
	syscall
	li $v0,4
	la $a0,str
	syscall
	addiu $t1,$t1,4
	j f
eF1:	jr $ra
